#!/usr/bin/perl
use Getopt::Long;

GetOptions (\%opt,"inf:s","gff1:s","gff2:s","project:s","help");


my $help=<<USAGE;
Create ort file from distance information generated by distanceinf.pl.
Be sure gff1 should be OB and gff2 should OS
perl $0 --inf ./distance_data/OB2OS.distance.txt --gff1 ../input/OBa.all.gff --gff2 ../input/RAP3.gff --project os_ob > log 2> log2 
USAGE


if ($opt{help} or keys %opt < 1){
    print "$help\n";
    exit();
} 

my %taxaid=(
    "rice" => 39947,
    "FF"   => 4533,
    "sorghum" => 4558,
    "maize" => 4577,
    "bradi" => 15368
);

my $refgff1=parseGFF("$opt{gff1}");
my $refgff2=parseGFF("$opt{gff2}");

open OUT, ">$opt{project}.ort" or die "$!";
open IN, "$opt{inf}" or die "$!";
while(<IN>){
   chomp $_;
   my @unit=split("\t",$_);
   if (exists $refgff1->{$unit[0]}){
     print OUT "$unit[0]\t$refgff1->{$unit[0]}->[0]\t$refgff1->{$unit[0]}->[1]\t$refgff1->{$unit[0]}->[2]\t$taxaid{FF}\t"; 
     print OUT "$unit[1]\t$refgff2->{$unit[1]}->[0]\t$refgff2->{$unit[1]}->[1]\t$refgff2->{$unit[1]}->[2]\t$unit[2]\t$taxaid{rice}\n";
   }else{
     print "$_\n"; 
   }
}
close IN;
##############
sub parseGFF
{
my ($gff)=@_;
my %hash;  ##hash to store every record by key of Seq_id
my $seq;   ##Scaffold
my $id;    ##ID for element
open IN, "$gff" or die "$!";
while (<IN>){
    chomp $_;
    next if ($_=~/^#/);
    my @unit=split("\t",$_);
    if ($unit[2]=~/mRNA/){
        $seq=$unit[0];
        $seq=~s/chr0//g;
        $seq=~s/chr//g;
        if ($unit[8]=~/ID=(.*);/ or $unit[8] =~/ID=(.*)/){
            $id=$1;
        }
        $hash{$id}=[$seq,$unit[3],$unit[4]];
    }
}
close IN;
return \%hash;
}

